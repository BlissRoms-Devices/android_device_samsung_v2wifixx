Device configuration for the Samsung Galaxy Note Pro 12.2

Copyright (C) 2015 Team Bliss (http://www.teambliss.x10host.com)
Copyright (C) 2015 Valera Chigir <valera1978@tut.by>

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

------------------------------------------------------------------

* Description

  This repository is for Team Bliss on Samsung Galaxy Note Pro 12.2 (v1awifi)

* How To Build Team Bliss for Samsung Galaxy Note Pro 12.2

  - Make a workspace

mkdir bliss
cd bliss

  - Do repo init & sync

repo init -u https://github.com/TeamBliss-LP/android.git -b lp5.1

  - Create .repo/local_manifests/roomservice.xml with the following content:

<?xml version="1.0" encoding="UTF-8"?>
<manifest>
  <project name="Valera1978/android_device_samsung_v1awifi" path="device/samsung/v1awifi" remote="github" revision="bliss" />
  <project name="Valera1978/android_kernel_samsung_v1awifi" path="kernel/samsung" remote="github" revision="cm12" />
  <project name="Valera1978/android_vendor_samsung_v1awifi" path="vendor/samsung/v1awifi" remote="github" revision="cm12" />
  <project name="CyanogenMod/android_kernel_samsung_exynos5420" path="kernel/samsung/exynos5420" remote="github" revision="cm-12.1" />
  <project name="CyanogenMod/android_hardware_samsung" path="hardware/samsung" remote="github" revision="cm-12.1" />
  <project name="CyanogenMod/android_hardware_samsung_slsi_exynos" path="hardware/samsung_slsi/exynos" remote="github" revision="cm-12.1" />
  <project name="CyanogenMod/android_hardware_samsung_slsi_exynos5-insignal" path="hardware/samsung_slsi/exynos5-insignal" remote="github" revision="cm-12.0" />
  <project name="CyanogenMod/android_hardware_samsung_slsi_exynos5420" path="hardware/samsung_slsi/exynos5420" remote="github" revision="cm-12.1" />
  <project name="CyanogenMod/android_hardware_samsung_slsi_openmax" path="hardware/samsung_slsi/openmax" remote="github" revision="cm-12.1" />
</manifest>

repo sync

  - Copy proprietary vendor files

  There are two options to to that. Connect your device with adb enabled and run:

./extract-files.sh

  Or if you have the system image unpacked on your disk, then simply run:

    STOCK_ROM_DIR=/path/to/system ./extract-files.sh

  - Setup environment

. build/envsetup.sh

  - Build bliss

brunch v1awifi

or another way:

lunch bliss_v1awifi-userdebug
export USE_CCACHE=1
make -j10 bacon
